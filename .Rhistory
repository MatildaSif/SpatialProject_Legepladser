prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE)
opts_knit$set(width=75)
library(sf)
library(tidyverse)
library(googlesheets4)
library(leaflet)
# Your code
wcdata %>%
group_by(year) %>%
summarize(flatsC = sum(flatsSum),
bathC = sum(bathSum),
pct_bathaccess=bathC/flatsC*100)
wcdata
wcdata %>%
group_by(year) %>%
summarize(flatsC = sum(flatsSum),
wcC = sum(wc_Sum),
pct_wcaccessC=wcC/flatsC*100)
wc_spatial <- suburbs %>%
merge(wcdata, by.x= "id",by.y ="suburb_id")
wc_spatial
#Review the column names to see what new columns you have created
names(wc_spatial)
wc1950 <- wc_spatial %>%
filter(year==1950)
library(tmap)
tmap_mode(mode = "plot")
tm_shape(wc1950) +
tm_borders(col = "black",
lwd = 1) +
tm_polygons("flatsSum",
id = "navn",
style = "jenks")+
tm_legend(legend.position= c("RIGHT", "TOP"))+
tm_compass(position = c("RIGHT", "BOTTOM"),
type = "rose",
size = 2) +
tm_scale_bar(position = c("RIGHT", "BOTTOM"),
breaks = c(0, 2, 4),
text.size = 1) +
tm_credits(position = c("RIGHT", "BOTTOM"),
text = "Adela Sobotkova, 2022") +
tm_layout(main.title = "Copenhagen 1950 situation",
legend.outside = FALSE)
tmap_options(limits = c(facets.view = 5)) # we want to view 5 periods
tmap_mode(mode = "view") # can be view or plot
wc1950 <- wc_spatial %>%
filter(year==1950)
library(tmap)
tmap_mode(mode = "view") # can be view or plot
tm_shape(wc1950) +
tm_borders(col = "black",
lwd = 1) +
tm_polygons("flatsSum",
id = "navn",
style = "jenks")+
tm_legend(legend.position= c("RIGHT", "TOP"))+
tm_compass(position = c("RIGHT", "BOTTOM"),
type = "rose",
size = 2) +
tm_scale_bar(position = c("RIGHT", "BOTTOM"),
breaks = c(0, 2, 4),
text.size = 1) +
tm_credits(position = c("RIGHT", "BOTTOM"),
text = "Adela Sobotkova, 2022") +
tm_layout(main.title = "Copenhagen 1950 situation",
legend.outside = FALSE)
tmap_options(limits = c(facets.view = 5)) # we want to view 5 periods
#tmap_options(limits = c(facets.view = 5)) # we want to view 5 periods
tmap_mode(mode = "view" )
tm_shape(wc_spatial) +
tm_facets(by = "year",
ncol=3, nrow = 2)+
tm_polygons("flatsSum",
id = "navn",
style = "jenks")+
tm_layout(main.title = "Copenhagen Flats",
legend.outside = TRUE)
wc_spatial <- wc_spatial %>%
mutate(area_km2 = areal_m2/1000000,
flat_per_km = flatsSum/area_km2)
library(tmap)
tmap_options(limits = c(facets.view = 5)) # we want to view 6 years
#tmap_options(limits = c(facets.view = 5)) # we want to view 6 years
tmap_mode(mode = "view" )
library(tmap)
tmap_options(limits = c(facets.view = 5)) # we want to view 5 years
#tmap_options(limits = c(facets.view = 5)) # we want to view 5 years
tmap_mode(mode = "view" )
library(tmap)
#tmap_options(limits = c(facets.view = 5)) # we want to view 5 periods
tmap_mode(mode = "view" )
tm_shape(wc_spatial) +
tm_facets(by = "year",
ncol=3, nrow = 2)+
tm_polygons("pct_wc",
id = "navn",
style = "pretty",
title = "% of flats with <br>access to WC")
wc_spatial <- wc_spatial %>%
mutate(bath_per_km = bath/area_km2,
wc_per_km = wc_access/area_km2)
wc_spatial <- wc_spatial %>%
mutate(bath_per_km = bathSum/area_km2,
wc_per_km = wc_access/area_km2)
wc_spatial <- wc_spatial %>%
mutate(bath_per_km = bathSum/area_km2,
wc_per_km = wc_Sum/area_km2)
## YOUR CODE
servants <- st_read("../data/Servants.shp")
library(osmdata)
# Create a bounding box
bb  <- suburbs %>% st_transform(4326) %>% st_bbox()
plot(bb)
q <- opq(bbox = bb,timeout = 180)
qa  <- add_osm_feature(q, key = 'amenity',value = 'public_bath')
#qb     <- add_osm_feature(q, key = 'amenity',value = 'drinking_water')
qc     <- add_osm_feature(q, key = 'amenity',value = 'shower')
qd     <- add_osm_feature(q, key = 'amenity',value = 'toilets')
#qe     <- add_osm_feature(q, key = 'amenity',value = 'water_point')
public_bath <- c(osmdata_sf(qa),
osmdata_sf(qc),
osmdata_sf(qd))
## YOUR CODE
servants <- st_read("../data/Servants.parquet")
## YOUR CODE
servants <- st_read("../data/Servants.parquet", options = "ENCODING=WINDOWS-1252")
## YOUR CODE
servants <- st_read("../data/Servants.shp")
knitr::opts_chunk$set(echo = TRUE)
cwd()
wd()
playgrounds <- st_read("data/Aarhus_legepladser.geojson")
library(sf)
playgrounds <- st_read("data/Aarhus_legepladser.geojson")
ls()
setwd("~/Desktop/Bachelor/Semester 6/Spatial Analytics/Project/SpatialProject_Legepladser")
library(sf)
playgrounds <- st_read("data/Aarhus_legepladser.geojson")
knitr::opts_chunk$set(echo = TRUE)
library(sf)
head(aar)
# Install Playground data
aar <- st_read("data/Aarhus_legepladser.geojson")
head(aar)
head(aar)
head(aar)
head(frb)
aar <- st_read("data/Aarhus_legepladser.geojson")
frb <- st_read("data/Frederiksberg_legepladser.geojson")
kbh<- st_read("data/København_legepladser.geojson")
rks <- st_read("data/RKS_legepladser.geojson")
rks <- st_read("data/RingkobingSkjern_legepladser.geojson")
sb <- st_read("data/Silkeborg_legepladser.geojson") # sb is a more than just playgrounds - need to filter
vhl <- st_read("data/Vesthimmerland_legepladser.geojson")
head(aar)
head(frb)
head(kbh)
head(rks)
head(sb)
head(vhl)
head(frb)
head(kbh)
head(rks)
head(kbh)
head(frb)
head(aar)
head(rks)
head(sb)
head(vhl)
# check unique options in facilitet_type column for Silkeborg data
unique(sb$facilitet_type)
# check values in facilitet_type column for Silkeborg data
unique(sb$facilitet_type)
# check options in facilitet_type column for Silkeborg data
options(scipen=999)
head(sb) # filter for facilitet_type
# check all different values in facilitet_type column for Silkeborg data
unique(sb$FACILITET_TYPE)
# filter so only "Legeplads" are remaining
sb <- sb %>%  filter(FACILITET_TYPE == "Legeplads")
library(dplyr)
# filter so only "Legeplads" are remaining
sb <- sb %>%  filter(FACILITET_TYPE == "Legeplads")
unique(sb$FACILITET_TYPE)
View(sb)
knitr::opts_chunk$set(echo = TRUE)
library(sf)
library(dplyr)
# Set crs
aar <- st_set_crs(aar, 4326)
# make all crs the same
frb <- st_set_crs(frb, 4326)
kbh <- st_set_crs(kbh, 4326)
rks <- st_set_crs(rks, 4326)
sb <- st_set_crs(sb, 4326)
vhl <- st_set_crs(vhl, 4326)
# check crs
st_crs(aar)
st_crs(frb)
st_crs(kbh)
st_crs(rks)
st_crs(sb)
st_crs(vhl)
# check crs
st_crs(aar)
st_crs(frb)
st_crs(kbh)
st_crs(rks)
st_crs(sb)
st_crs(vhl)
View(aar)
# Collate playgrounds into one map
playgrounds <- rbind(aar, frb, kbh, rks, sb, vhl)
View(aar)
View(frb)
View(kbh)
View(rks)
View(sb)
View(vhl)
aar <- aar %>% select(geometry, lokation, adresse, nr)
frb <- frb %>% select(geometry, navn)
kbh <- kbh %>% select(geometry, adressebeskrivelse)
rks <- rks %>% select(geometry, LEVERANDOR)
sb <- sb %>% select(geometry, VEJNAVN)
vhl <- vhl %>% select(geometry, Adresse)
# Collate playgrounds into one map
## Select vital columns
aar <- aar %>% select(geometry, adresse)
frb <- frb %>% select(geometry, navn)
kbh <- kbh %>% select(geometry, adressebeskrivelse)
rks <- rks %>% select(geometry, LEVERANDOR)
sb <- sb %>% select(geometry, VEJNAVN)
vhl <- vhl %>% select(geometry, Adresse)
## Rename columns to be the same
aar <- aar %>% rename(adresse = adresse)
frb <- frb %>% rename(adresse = navn)
kbh <- kbh %>% rename(adresse = adressebeskrivelse)
rks <- rks %>% rename(adresse = LEVERANDOR)
sb <- sb %>% rename(adresse = VEJNAVN)
vhl <- vhl %>% rename(adresse = Adresse)
## Combine all dataframes into one
playgrounds <- rbind(aar, frb, kbh, rks, sb, vhl)
View(playgrounds)
# Collate playgrounds into one map
## Select vital columns
aar <- aar %>% select(geometry, adresse)
frb <- frb %>% select(geometry, navn)
# Load Playground data
aar <- st_read("data/Aarhus_legepladser.geojson")
frb <- st_read("data/Frederiksberg_legepladser.geojson")
kbh<- st_read("data/København_legepladser.geojson")
rks <- st_read("data/RingkobingSkjern_legepladser.geojson")
sb <- st_read("data/Silkeborg_legepladser.geojson") # sb is a more than just playgrounds - need to filter
vhl <- st_read("data/Vesthimmerland_legepladser.geojson")
head(aar)
head(frb)
head(kbh)
head(rks)
head(sb) # filter for facilitet_type
head(vhl)
# check all different values in facilitet_type column for Silkeborg data
unique(sb$FACILITET_TYPE)
# filter so only "Legeplads" are remaining
sb <- sb %>%  filter(FACILITET_TYPE == "Legeplads")
unique(sb$FACILITET_TYPE)
# Set crs
aar <- st_set_crs(aar, 4326)
frb <- st_set_crs(frb, 4326)
kbh <- st_set_crs(kbh, 4326)
rks <- st_set_crs(rks, 4326)
sb <- st_set_crs(sb, 4326)
vhl <- st_set_crs(vhl, 4326)
# check crs
st_crs(aar)
st_crs(frb)
st_crs(kbh)
st_crs(rks)
st_crs(sb)
st_crs(vhl)
aar <- st_transform(aar, 4326)
frb <- st_transform(frb, 4326)
kbh <- st_transform(kbh, 4326)
rks <- st_transform(rks, 4326)
sb <- st_transform(sb, 4326)
vhl <- st_transform(vhl, 4326)
# Collate playgrounds into one map
## Select vital columns
aar <- aar %>% select(geometry, adresse)
frb <- frb %>% select(geometry, navn)
kbh <- kbh %>% select(geometry, adressebeskrivelse)
rks <- rks %>% select(geometry, LEVERANDOR)
sb <- sb %>% select(geometry, VEJNAVN)
vhl <- vhl %>% select(geometry, Adresse)
# add column name with municipality
aar <- aar %>% mutate(municipality = "Aarhus")
frb <- frb %>% mutate(municipality = "Frederiksberg")
kbh <- kbh %>% mutate(municipality = "København")
rks <- rks %>% mutate(municipality = "Ringkøbing-Skjern")
sb <- sb %>% mutate(municipality = "Silkeborg")
vhl <- vhl %>% mutate(municipality = "Vesthimmerland")
## Rename columns to be the same
aar <- aar %>% rename(adresse = adresse)
frb <- frb %>% rename(adresse = navn)
kbh <- kbh %>% rename(adresse = adressebeskrivelse)
rks <- rks %>% rename(adresse = LEVERANDOR)
sb <- sb %>% rename(adresse = VEJNAVN)
vhl <- vhl %>% rename(adresse = Adresse)
## Combine all dataframes into one
playgrounds <- rbind(aar, frb, kbh, rks, sb, vhl)
View(playgrounds)
# see leaflet map of all playgrounds
library(leaflet)
library(leaflet.extras)
# see leaflet map of all playgrounds
library(leaflet)
# see leaflet map of all playgrounds
library(leaflet)
library(htmltools)
library(htmlwidgets)
leaflet(playgrounds) %>%
addTiles() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addCircleMarkers(
radius = 5,
color = "blue",
fillOpacity = 0.5,
popup = ~ adresse,
clusterOptions = markerClusterOptions()
) %>%
addMiniMap(tiles = providers$CartoDB.Positron, toggleDisplay = TRUE)
leaflet(playgrounds) %>%
addTiles() %>%
addProviderTiles(providers$CartoDB.Positron)
leaflet(playgrounds) %>%
addTiles()
# see leaflet map of all playgrounds
library(leaflet)
leaflet(data = all_sf) %>%
addTiles() %>%
addPolygons()
# see leaflet map of all playgrounds
library(leaflet)
leaflet(data = playgrounds) %>%
addTiles() %>%
addPolygons()
leaflet(data = playgrounds) %>%
addTiles()
View(aar)
View(frb)
View(kbh)
View(playgrounds)
View(rks)
View(sb)
View(sb)
View(vhl)
View(vhl)
# Collate playgrounds into one map
## Select vital columns
aar <- aar %>% select(geometry, adresse)
frb <- frb %>% select(geometry, navn)
knitr::opts_chunk$set(echo = TRUE)
library(sf)
library(dplyr)
# Load Playground data
aar <- st_read("data/Aarhus_legepladser.geojson")
frb <- st_read("data/Frederiksberg_legepladser.geojson")
kbh<- st_read("data/København_legepladser.geojson")
rks <- st_read("data/RingkobingSkjern_legepladser.geojson")
sb <- st_read("data/Silkeborg_legepladser.geojson") # sb is a more than just playgrounds - need to filter
vhl <- st_read("data/Vesthimmerland_legepladser.geojson")
head(aar)
head(frb)
head(kbh)
head(rks)
head(sb) # filter for facilitet_type
head(vhl)
# check all different values in facilitet_type column for Silkeborg data
unique(sb$FACILITET_TYPE)
# filter so only "Legeplads" are remaining
sb <- sb %>%  filter(FACILITET_TYPE == "Legeplads")
unique(sb$FACILITET_TYPE)
# Set crs
aar <- st_set_crs(aar, 4326)
frb <- st_set_crs(frb, 4326)
kbh <- st_set_crs(kbh, 4326)
rks <- st_set_crs(rks, 4326)
sb <- st_set_crs(sb, 4326)
vhl <- st_set_crs(vhl, 4326)
# check crs
st_crs(aar)
st_crs(frb)
st_crs(kbh)
st_crs(rks)
st_crs(sb)
st_crs(vhl)
# use st_transform
aar <- st_transform(aar, 4326)
frb <- st_transform(frb, 4326)
kbh <- st_transform(kbh, 4326)
rks <- st_transform(rks, 4326)
sb <- st_transform(sb, 4326)
vhl <- st_transform(vhl, 4326)
# Collate playgrounds into one map
## Select vital columns
aar <- aar %>% select(geometry, adresse)
frb <- frb %>% select(geometry, navn)
kbh <- kbh %>% select(geometry, adressebeskrivelse)
rks <- rks %>% select(geometry, LEVERANDOR)
sb <- sb %>% select(geometry, VEJNAVN)
vhl <- vhl %>% select(geometry, Adresse)
## Cast geometry column
aar <- aar %>% st_cast("GEOMETRY")
frb <- frb %>% st_cast("GEOMETRY")
kbh <- kbh %>% st_cast("GEOMETRY")
rks <- rks %>% st_cast("GEOMETRY")
sb <- sb %>% st_cast("GEOMETRY")
vhl <- vhl %>% st_cast("GEOMETRY")
## add column name with municipality
aar <- aar %>% mutate(municipality = "Aarhus")
frb <- frb %>% mutate(municipality = "Frederiksberg")
kbh <- kbh %>% mutate(municipality = "København")
rks <- rks %>% mutate(municipality = "Ringkøbing-Skjern")
sb <- sb %>% mutate(municipality = "Silkeborg")
vhl <- vhl %>% mutate(municipality = "Vesthimmerland")
## Rename columns to be the same
aar <- aar %>% rename(adresse = adresse)
frb <- frb %>% rename(adresse = navn)
kbh <- kbh %>% rename(adresse = adressebeskrivelse)
rks <- rks %>% rename(adresse = LEVERANDOR)
sb <- sb %>% rename(adresse = VEJNAVN)
vhl <- vhl %>% rename(adresse = Adresse)
## Combine all dataframes into one
playgrounds <- rbind(aar, frb, kbh, rks, sb, vhl)
# see leaflet map of all playgrounds
library(leaflet)
leaflet(data = playgrounds) %>%
addTiles()
# Load Municipality income data
# Load Municipality boundries data
table(st_geometry_type(combined))
table(st_geometry_type(playgrounds))
combined <- st_cast(combined, "MULTIPOLYGON")
table(st_geometry_type(playgrounds))
playgrounds <- st_cast(playgrounds, "MULTIPOLYGON")
playgrounds <- st_cast(playgrounds, "POINT")
table(st_geometry_type(playgrounds))
# see leaflet map of all playgrounds
library(leaflet)
leaflet(data = playgrounds) %>%
addTiles()
leaflet(data = playgrounds) %>%
addTiles() %>%
addCircleMarkers(radius = 5, color = "blue", fill = TRUE, fillOpacity = 0.7,
popup = ~as.character(geometry))  # Replace NAME with a property from your GeoJSON
leaflet(data = playgrounds) %>%
addTiles() %>%
addCircleMarkers(popup = ~geometry)  # Replace NAME with a property from your GeoJSON
View(playgrounds)
# see leaflet map of all playgrounds
library(leaflet)
# create a leaflet map with markers using point geometry
leaflet(playgrounds) %>%
addTiles() %>%
addMarkers(lng = ~st_coordinates(geometry)[,1], lat = ~st_coordinates(geometry)[,2],
popup = ~paste0("<strong>Municipality: </strong>", municipality, "<br>",
"<strong>Address: </strong>", adresse))
# create a leaflet map with markers using point geometry
leaflet(playgrounds) %>%
addTiles() %>%
addMarkers(lng = ~st_coordinates(geometry)[,1], lat = ~st_coordinates(geometry)[,2])
# create a leaflet map with markers using point geometry add markers with muncipality
leaflet(playgrounds) %>%
addTiles() %>%
addMarkers(
lng = ~st_coordinates(geometry)[,1],
lat = ~st_coordinates(geometry)[,2],
popup = ~paste0("<strong>Municipality: </strong>", municipality, "<br>",
"<strong>Address: </strong>", adresse)
) %>%
setView(lng = 10.2, lat = 56.2, zoom = 7)
# create a leaflet map with markers using point geometry add markers with muncipality. set view to denmark
leaflet(playgrounds) %>%
addTiles() %>%
setView(lng = 10.2, lat = 56.2, zoom = 7) %>%
addMarkers(popup = ~paste("Municipality:", municipality, "<br>", "Address:", adresse)) %>%
addProviderTiles(providers$CartoDB.Positron)
# create a leaflet map with markers using point geometry add markers with muncipality. set view to denmark
leaflet(playgrounds) %>%
addTiles() %>%
setView(lng = 10.2, lat = 56.2, zoom = 7) %>%
addMarkers(popup = ~paste("Municipality:", municipality, "<br>", "Address:", adresse))
label = ~paste("Municipality:", municipality, "<br>", "Address:", adresse)
label = ~paste("Municipality:", municipality, "<br>", "Address:", adresse)
leaflet(playgrounds) %>%
addTiles() %>%
setView(lng = 10.2, lat = 56.2, zoom = 7) %>%
addMarkers(lng = ~st_coordinates(geometry)[,1], lat = ~st_coordinates(geometry)[,2], popup= "Municipality: " ~ municipality,
label = ~paste("Municipality:", municipality, "<br>", "Address:", adresse)
# see leaflet map of all playgrounds
library(leaflet)
# see leaflet map of all playgrounds
library(leaflet)
label = ~paste("Municipality:", municipality, "<br>", "Address:", adresse)
label = ~paste("Municipality:", municipality, "<br>", "Address:", adresse)
setView(lng = 10.2, lat = 56.2, zoom = 7) %>%
# see leaflet map of all playgrounds
library(leaflet)
